{
  "resourceType" : "Parameters",
  "id" : "example",
  "parameter" : [{
    "name" : "crtdl",
    "valueBase64Binary" : "{
  "version": "http://json-schema.org/to-be-done/schema#",
  "display": "",
  "cohortDefinition": {
    "version": "http://to_be_decided.com/draft-1/schema#",
    "display": "",
    "inclusionCriteria": [
      [
        {
          "termCodes": [
            {
              "code": "263495000",
              "system": "http://snomed.info/sct",
              "display": "Geschlecht"
            }
          ],
          "context": {
            "code": "Patient",
            "system": "fdpg.mii.cds",
            "version": "1.0.0",
            "display": "Patient"
          },
          "valueFilter": {
            "selectedConcepts": [
              {
                "code": "female",
                "display": "Female",
                "system": "http://hl7.org/fhir/administrative-gender"
              },
              {
                "code": "male",
                "display": "Male",
                "system": "http://hl7.org/fhir/administrative-gender"
              }
            ],
            "type": "concept"
          }
        }
      ]
    ]
  },
  "dataExtraction": {
    "attributeGroups": [
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/core/modul-medikation/StructureDefinition/MedicationStatement",
        "attributes": [
          {
            "attributeRef": "MedicationStatement.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationStatement.basedOn",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationStatement.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationStatement.status",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationStatement.category",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationStatement.medication[x]",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationStatement.context",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationStatement.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationStatement.dateAsserted",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationStatement.informationSource",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationStatement.reasonCode",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationStatement.reasonReference",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationStatement.note",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationStatement.dosage",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/core/modul-medikation/StructureDefinition/medikationsliste",
        "attributes": [
          {
            "attributeRef": "List.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "List.status",
            "mustHave": false
          },
          {
            "attributeRef": "List.mode",
            "mustHave": false
          },
          {
            "attributeRef": "List.code",
            "mustHave": false
          },
          {
            "attributeRef": "List.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "List.date",
            "mustHave": false
          },
          {
            "attributeRef": "List.entry",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/core/modul-medikation/StructureDefinition/MedicationRequest",
        "attributes": [
          {
            "attributeRef": "MedicationRequest.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationRequest.status",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationRequest.intent",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationRequest.medication[x]",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationRequest.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationRequest.authoredOn",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationRequest.requester",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationRequest.recorder",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationRequest.reasonCode",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationRequest.reasonReference",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationRequest.basedOn",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationRequest.note",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationRequest.dosageInstruction",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationRequest.substitution",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationRequest.priorPrescription",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationRequest.detectedIssue",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/core/modul-medikation/StructureDefinition/Medication",
        "attributes": [
          {
            "attributeRef": "Medication.code",
            "mustHave": false
          },
          {
            "attributeRef": "Medication.form",
            "mustHave": false
          },
          {
            "attributeRef": "Medication.ingredient",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/core/modul-medikation/StructureDefinition/MedicationAdministration",
        "attributes": [
          {
            "attributeRef": "MedicationAdministration.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationAdministration.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationAdministration.status",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationAdministration.category",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationAdministration.medication[x]",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationAdministration.context",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationAdministration.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationAdministration.performer",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationAdministration.reasonCode",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationAdministration.reasonReference",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationAdministration.request",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationAdministration.note",
            "mustHave": false
          },
          {
            "attributeRef": "MedicationAdministration.dosage",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/modul-consent/StructureDefinition/mii-pr-consent-provenance",
        "attributes": [
          {
            "attributeRef": "Provenance.target",
            "mustHave": false
          },
          {
            "attributeRef": "Provenance.recorded",
            "mustHave": false
          },
          {
            "attributeRef": "Provenance.agent",
            "mustHave": false
          },
          {
            "attributeRef": "Provenance.entity",
            "mustHave": false
          },
          {
            "attributeRef": "Provenance.signature",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/modul-consent/StructureDefinition/mii-pr-consent-einwilligung",
        "attributes": [
          {
            "attributeRef": "Consent.extension:domainReference",
            "mustHave": false
          },
          {
            "attributeRef": "Consent.status",
            "mustHave": false
          },
          {
            "attributeRef": "Consent.category",
            "mustHave": false
          },
          {
            "attributeRef": "Consent.patient",
            "mustHave": false
          },
          {
            "attributeRef": "Consent.dateTime",
            "mustHave": false
          },
          {
            "attributeRef": "Consent.organization",
            "mustHave": false
          },
          {
            "attributeRef": "Consent.source[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Consent.policy",
            "mustHave": false
          },
          {
            "attributeRef": "Consent.policyRule",
            "mustHave": false
          },
          {
            "attributeRef": "Consent.provision",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/modul-consent/StructureDefinition/mii-pr-consent-documentreference",
        "attributes": [
          {
            "attributeRef": "DocumentReference.status",
            "mustHave": false
          },
          {
            "attributeRef": "DocumentReference.content",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-biobank/StructureDefinition/Substance",
        "attributes": [
          {
            "attributeRef": "Substance.category",
            "mustHave": false
          },
          {
            "attributeRef": "Substance.code",
            "mustHave": false
          },
          {
            "attributeRef": "Substance.ingredient",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-biobank/StructureDefinition/Organization",
        "attributes": [
          {
            "attributeRef": "Organization.extension:beschreibung",
            "mustHave": false
          },
          {
            "attributeRef": "Organization.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Organization.type",
            "mustHave": false
          },
          {
            "attributeRef": "Organization.name",
            "mustHave": false
          },
          {
            "attributeRef": "Organization.alias",
            "mustHave": false
          },
          {
            "attributeRef": "Organization.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Organization.contact",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-biobank/StructureDefinition/Specimen",
        "attributes": [
          {
            "attributeRef": "Specimen.extension:festgestellteDiagnose",
            "mustHave": false
          },
          {
            "attributeRef": "Specimen.extension:gehoertZu",
            "mustHave": false
          },
          {
            "attributeRef": "Specimen.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Specimen.status",
            "mustHave": false
          },
          {
            "attributeRef": "Specimen.type",
            "mustHave": false
          },
          {
            "attributeRef": "Specimen.parent",
            "mustHave": false
          },
          {
            "attributeRef": "Specimen.request",
            "mustHave": false
          },
          {
            "attributeRef": "Specimen.collection",
            "mustHave": false
          },
          {
            "attributeRef": "Specimen.processing",
            "mustHave": false
          },
          {
            "attributeRef": "Specimen.container",
            "mustHave": false
          },
          {
            "attributeRef": "Specimen.note",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-biobank/StructureDefinition/SpecimenCore",
        "attributes": [
          {
            "attributeRef": "Specimen.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Specimen.status",
            "mustHave": false
          },
          {
            "attributeRef": "Specimen.type",
            "mustHave": false
          },
          {
            "attributeRef": "Specimen.parent",
            "mustHave": false
          },
          {
            "attributeRef": "Specimen.request",
            "mustHave": false
          },
          {
            "attributeRef": "Specimen.collection",
            "mustHave": false
          },
          {
            "attributeRef": "Specimen.processing",
            "mustHave": false
          },
          {
            "attributeRef": "Specimen.container",
            "mustHave": false
          },
          {
            "attributeRef": "Specimen.note",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/core/modul-prozedur/StructureDefinition/Procedure",
        "attributes": [
          {
            "attributeRef": "Procedure.extension:Dokumentationsdatum",
            "mustHave": false
          },
          {
            "attributeRef": "Procedure.extension:durchfuehrungsabsicht",
            "mustHave": false
          },
          {
            "attributeRef": "Procedure.status",
            "mustHave": false
          },
          {
            "attributeRef": "Procedure.category",
            "mustHave": false
          },
          {
            "attributeRef": "Procedure.code",
            "mustHave": false
          },
          {
            "attributeRef": "Procedure.performed[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Procedure.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Procedure.note",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/core/modul-person/StructureDefinition/Vitalstatus",
        "attributes": [
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.note",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/core/modul-person/StructureDefinition/PatientPseudonymisiert",
        "attributes": [
          {
            "attributeRef": "Patient.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Patient.gender",
            "mustHave": false
          },
          {
            "attributeRef": "Patient.birthDate",
            "mustHave": false
          },
          {
            "attributeRef": "Patient.deceased[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Patient.address",
            "mustHave": false
          },
          {
            "attributeRef": "Patient.link",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/core/modul-person/StructureDefinition/ResearchSubject",
        "attributes": [
          {
            "attributeRef": "ResearchSubject.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "ResearchSubject.status",
            "mustHave": false
          },
          {
            "attributeRef": "ResearchSubject.period",
            "mustHave": false
          },
          {
            "attributeRef": "ResearchSubject.study",
            "mustHave": false
          },
          {
            "attributeRef": "ResearchSubject.individual",
            "mustHave": false
          },
          {
            "attributeRef": "ResearchSubject.consent",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/core/modul-person/StructureDefinition/Patient",
        "attributes": [
          {
            "attributeRef": "Patient.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Patient.name",
            "mustHave": false
          },
          {
            "attributeRef": "Patient.gender",
            "mustHave": false
          },
          {
            "attributeRef": "Patient.birthDate",
            "mustHave": false
          },
          {
            "attributeRef": "Patient.deceased[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Patient.address",
            "mustHave": false
          },
          {
            "attributeRef": "Patient.link",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/core/modul-person/StructureDefinition/Todesursache",
        "attributes": [
          {
            "attributeRef": "Condition.clinicalStatus",
            "mustHave": false
          },
          {
            "attributeRef": "Condition.verificationStatus",
            "mustHave": false
          },
          {
            "attributeRef": "Condition.category",
            "mustHave": false
          },
          {
            "attributeRef": "Condition.code",
            "mustHave": false
          },
          {
            "attributeRef": "Condition.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Condition.recordedDate",
            "mustHave": false
          },
          {
            "attributeRef": "Condition.note",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/core/modul-diagnose/StructureDefinition/Diagnose",
        "attributes": [
          {
            "attributeRef": "Condition.extension:ReferenzPrimaerdiagnose",
            "mustHave": false
          },
          {
            "attributeRef": "Condition.extension:Feststellungsdatum",
            "mustHave": false
          },
          {
            "attributeRef": "Condition.clinicalStatus",
            "mustHave": false
          },
          {
            "attributeRef": "Condition.code",
            "mustHave": false
          },
          {
            "attributeRef": "Condition.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Condition.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Condition.onset[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Condition.recordedDate",
            "mustHave": false
          },
          {
            "attributeRef": "Condition.note",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/core/modul-fall/StructureDefinition/KontaktGesundheitseinrichtung",
        "attributes": [
          {
            "attributeRef": "Encounter.extension:Aufnahmegrund",
            "mustHave": false
          },
          {
            "attributeRef": "Encounter.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Encounter.status",
            "mustHave": false
          },
          {
            "attributeRef": "Encounter.class",
            "mustHave": false
          },
          {
            "attributeRef": "Encounter.type",
            "mustHave": false
          },
          {
            "attributeRef": "Encounter.serviceType",
            "mustHave": false
          },
          {
            "attributeRef": "Encounter.period",
            "mustHave": false
          },
          {
            "attributeRef": "Encounter.diagnosis",
            "mustHave": false
          },
          {
            "attributeRef": "Encounter.hospitalization",
            "mustHave": false
          },
          {
            "attributeRef": "Encounter.location",
            "mustHave": false
          },
          {
            "attributeRef": "Encounter.serviceProvider",
            "mustHave": false
          },
          {
            "attributeRef": "Encounter.partOf",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/devicemetric-eingestellte-gemessene-parameter-beatmung",
        "attributes": [
          {
            "attributeRef": "DeviceMetric.type",
            "mustHave": false
          },
          {
            "attributeRef": "DeviceMetric.source",
            "mustHave": false
          },
          {
            "attributeRef": "DeviceMetric.category",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/linksventrikulaeres-herzzeitvolumen-durch-indikatorverduennung",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/linksventrikulaerer-druck",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.method",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/sauerstoffsaettigung-im-blut-preduktal-durch-pulsoxymetrie",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/maximaler-beatmungsdruck",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/beatmungszeit-hohem-druck",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/koerpertemperatur-brust",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/atemzugvolumen-einstellung",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/linksventrikulaeres-schlagvolumenindex",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/einstellung-einatmungszeit-beatmung",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/koerpertemperatur-nasal",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/inspiratorischer-gasfluss",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/spontane-atemfrequenz-beatmet",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/linksventrikulaerer-herzindex",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/mittlerer-beatmungsdruck",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/atemwegsdruck-bei-mittlerem-expiratorischem-gasfluss",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/venoeser-druck",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/zeitverhaeltnis-ein-ausatmung",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/substituatvolumen",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/pulmonalarterieller-wedge-druck",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/sauerstoffsaettigung-im-arteriellen-blut-durch-pulsoxymetrie",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/spontanes-atemzugvolumen",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/koerpertemperatur-generisch",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/sauerstoffsaettigung-im-blut-postduktal-durch-pulsoxymetrie",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/beatmungszeit-niedrigem-druck",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/linksventrikulaerer-herzindex-durch-indikatorverduennung",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/koerpertemperatur-rektal",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/linksventrikulaerer-schlagvolumenindex-durch-indikatorverduennung",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/sonstige-pulsatile-druecke-generisch",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.method",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/koerpertemperatur-vaginal",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/koerpertemperatur-lendenwirbelsaeule",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/sauerstoffgasfluss",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/koerpertemperatur-trommelfell",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/koerpertemperatur-unter-der-zunge",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/dauer-extrakorporaler-gasaustausch",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/atemzugvolumen-waehrend-beatmung",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/herzfrequenz",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/eingestellter-inspiratorischer-gasfluss",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/druckdifferenz-beatmung",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/systemischer-vaskulaerer-widerstandsindex",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/blutfluss-extrakorporaler-gasaustausch",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/puls",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/icu-device",
        "attributes": [
          {
            "attributeRef": "Device.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Device.status",
            "mustHave": false
          },
          {
            "attributeRef": "Device.deviceName",
            "mustHave": false
          },
          {
            "attributeRef": "Device.type",
            "mustHave": false
          },
          {
            "attributeRef": "Device.version",
            "mustHave": false
          },
          {
            "attributeRef": "Device.property",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/haemodialyse-blutfluss",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/parameter-von-extrakorporalen-verfahren",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/endexpiratorischer-kohlendioxidpartialdruck",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/linksventrikulaeres-schlagvolumen-durch-indikatorverduennung",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/inspiratorische-sauerstofffraktion-gemessen",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/beatmungsvolumen-pro-minute-maschineller-beatmung",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/koerpertemperatur-leiste",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/koerpertemperatur-nasen-rachen-raum",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/herzzeitvolumen",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/koerpertemperatur-speiseroehre",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/spontane-mechanische-atemfrequenz-beatmet",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/koerpertemperatur-stirn",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/intrakranieller-druck-icp",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/inspiratorische-sauerstofffraktion-eingestellt",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/koerpertemperatur-achsel",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/koerpergewicht-percentil-altersabhaengig",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/koerpertemperatur-halswirbelsaeule",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/horowitz-in-arteriellem-blut",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/zentralvenoeser-blutdruck",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/ideales-koerpergewicht",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/linksatrialer-druck",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.method",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/rechtsatrialer-druck",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.method",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/blutfluss-cardiovasculaeres-geraet",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/exspiratorischer-gasfluss",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/koerpertemperatur-kern",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/mechanische-atemfrequenz-beatmet",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/koerpergroesse-percentil",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/rechtsventrikulaerer-druck",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.method",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/koerpertemperatur-atemwege",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/koerpertemperatur-blut",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/ionisiertes-kalzium-nierenersatzverfahren",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/monitoring-und-vitaldaten",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/parameter-von-beatmung",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/exspiratorischer-sauerstoffpartialdruck",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/einstellung-ausatmungszeit-beatmung",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/pulmonalvaskulaerer-widerstandsindex",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/devicemetric-eingestellte-gemessene-parameter-extrakorporale-verfahren",
        "attributes": [
          {
            "attributeRef": "DeviceMetric.type",
            "mustHave": false
          },
          {
            "attributeRef": "DeviceMetric.source",
            "mustHave": false
          },
          {
            "attributeRef": "DeviceMetric.category",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/koerpertemperatur-brustwirbelsaeule",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/atemwegsdruck-bei-null-expiratorischem-gasfluss",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/pulmonalarterieller-blutdruck",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.method",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/koerpertemperatur-harnblase",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/positiv-endexpiratorischer-druck",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/dauer-haemodialysesitzung",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/arterieller-druck",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/blutflussindex-extrakorporaler-gasaustausch",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/linksventrikulaeres-schlagvolumen",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.bodySite",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/spontanes-mechanisches-atemzugvolumen-waehrend-beatmung",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/substituatfluss",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-icu/StructureDefinition/unterstuetzungsdruck-beatmung",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.partOf",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-molgen/StructureDefinition/genotyp",
        "attributes": [
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.derivedFrom",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-molgen/StructureDefinition/medikationsempfehlung",
        "attributes": [
          {
            "attributeRef": "Task.status",
            "mustHave": false
          },
          {
            "attributeRef": "Task.intent",
            "mustHave": false
          },
          {
            "attributeRef": "Task.code",
            "mustHave": false
          },
          {
            "attributeRef": "Task.for",
            "mustHave": false
          },
          {
            "attributeRef": "Task.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Task.reasonCode",
            "mustHave": false
          },
          {
            "attributeRef": "Task.reasonReference",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-molgen/StructureDefinition/empfohlene-folgemassnahme",
        "attributes": [
          {
            "attributeRef": "Task.status",
            "mustHave": false
          },
          {
            "attributeRef": "Task.intent",
            "mustHave": false
          },
          {
            "attributeRef": "Task.code",
            "mustHave": false
          },
          {
            "attributeRef": "Task.for",
            "mustHave": false
          },
          {
            "attributeRef": "Task.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Task.reasonCode",
            "mustHave": false
          },
          {
            "attributeRef": "Task.reasonReference",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-molgen/StructureDefinition/familienanamnese",
        "attributes": [
          {
            "attributeRef": "FamilyMemberHistory.status",
            "mustHave": false
          },
          {
            "attributeRef": "FamilyMemberHistory.patient",
            "mustHave": false
          },
          {
            "attributeRef": "FamilyMemberHistory.date",
            "mustHave": false
          },
          {
            "attributeRef": "FamilyMemberHistory.relationship",
            "mustHave": false
          },
          {
            "attributeRef": "FamilyMemberHistory.sex",
            "mustHave": false
          },
          {
            "attributeRef": "FamilyMemberHistory.reasonCode",
            "mustHave": false
          },
          {
            "attributeRef": "FamilyMemberHistory.reasonReference",
            "mustHave": false
          },
          {
            "attributeRef": "FamilyMemberHistory.condition",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-molgen/StructureDefinition/ergebnis-zusammenfassung",
        "attributes": [
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:conclusion-string",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-molgen/StructureDefinition/molekulargenetischer-befundbericht",
        "attributes": [
          {
            "attributeRef": "DiagnosticReport.extension:genomics-artifact",
            "mustHave": false
          },
          {
            "attributeRef": "DiagnosticReport.extension:genomics-file",
            "mustHave": false
          },
          {
            "attributeRef": "DiagnosticReport.extension:recommended-action",
            "mustHave": false
          },
          {
            "attributeRef": "DiagnosticReport.extension:genomics-risk-assessment",
            "mustHave": false
          },
          {
            "attributeRef": "DiagnosticReport.extension:coded-note",
            "mustHave": false
          },
          {
            "attributeRef": "DiagnosticReport.extension:supporting-info",
            "mustHave": false
          },
          {
            "attributeRef": "DiagnosticReport.status",
            "mustHave": false
          },
          {
            "attributeRef": "DiagnosticReport.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "DiagnosticReport.issued",
            "mustHave": false
          },
          {
            "attributeRef": "DiagnosticReport.performer",
            "mustHave": false
          },
          {
            "attributeRef": "DiagnosticReport.resultsInterpreter",
            "mustHave": false
          },
          {
            "attributeRef": "DiagnosticReport.specimen",
            "mustHave": false
          },
          {
            "attributeRef": "DiagnosticReport.result",
            "mustHave": false
          },
          {
            "attributeRef": "DiagnosticReport.media",
            "mustHave": false
          },
          {
            "attributeRef": "DiagnosticReport.conclusion",
            "mustHave": false
          },
          {
            "attributeRef": "DiagnosticReport.conclusionCode",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-molgen/StructureDefinition/diagnostische-implikation",
        "attributes": [
          {
            "attributeRef": "Observation.extension:related-artifact",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.derivedFrom",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-molgen/StructureDefinition/anforderung-genetischer-test",
        "attributes": [
          {
            "attributeRef": "ServiceRequest.basedOn",
            "mustHave": false
          },
          {
            "attributeRef": "ServiceRequest.code",
            "mustHave": false
          },
          {
            "attributeRef": "ServiceRequest.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "ServiceRequest.authoredOn",
            "mustHave": false
          },
          {
            "attributeRef": "ServiceRequest.requester",
            "mustHave": false
          },
          {
            "attributeRef": "ServiceRequest.reasonCode",
            "mustHave": false
          },
          {
            "attributeRef": "ServiceRequest.reasonReference",
            "mustHave": false
          },
          {
            "attributeRef": "ServiceRequest.supportingInfo",
            "mustHave": false
          },
          {
            "attributeRef": "ServiceRequest.note",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-molgen/StructureDefinition/mikrosatelliteninstabilitaet",
        "attributes": [
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:conclusion-string",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-molgen/StructureDefinition/mutationslast",
        "attributes": [
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.specimen",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-molgen/StructureDefinition/variante",
        "attributes": [
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.method",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.specimen",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:conclusion-string",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:gene-studied",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:cytogenetic-location",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:reference-sequence-assembly",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:coding-hgvs",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:genomic-hgvs",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:genomic-ref-seq",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:transcript-ref-seq",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:exact-start-end",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:inner-start-end",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:outer-start-end",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:ref-allele",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:alt-allele",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:coding-change-type",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:genomic-source-class",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:sample-allelic-frequency",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:allelic-read-depth",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:allelic-state",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:variant-inheritance",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:variation-code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:chromosome-identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:protein-hgvs",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:amino-acid-change-type",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:molecular-consequence",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:copy-number",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:variant-confidence-status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:dna-region",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:gene-fusion",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:detection-limit",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-molgen/StructureDefinition/therapeutische-implikation",
        "attributes": [
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.derivedFrom",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-molgen/StructureDefinition/untersuchte-region",
        "attributes": [
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:conclusion-string",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:gene-studied",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:gene-mutations",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:region-description",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:region-coverage",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:ranges-examined",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:genomic-ref-seq",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:uncallable-regions",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.component:transcript-ref-seq",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/ext/modul-molgen/StructureDefinition/polygener-risiko-score",
        "attributes": [
          {
            "attributeRef": "RiskAssessment.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "RiskAssessment.status",
            "mustHave": false
          },
          {
            "attributeRef": "RiskAssessment.code",
            "mustHave": false
          },
          {
            "attributeRef": "RiskAssessment.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "RiskAssessment.occurrence[x]",
            "mustHave": false
          },
          {
            "attributeRef": "RiskAssessment.condition",
            "mustHave": false
          },
          {
            "attributeRef": "RiskAssessment.basis",
            "mustHave": false
          },
          {
            "attributeRef": "RiskAssessment.prediction",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/core/modul-labor/StructureDefinition/ObservationLab",
        "attributes": [
          {
            "attributeRef": "Observation.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.status",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.category",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.code",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.issued",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.value[x]",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.dataAbsentReason",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.interpretation",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.note",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.method",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.specimen",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.device",
            "mustHave": false
          },
          {
            "attributeRef": "Observation.referenceRange",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/core/modul-labor/StructureDefinition/ServiceRequestLab",
        "attributes": [
          {
            "attributeRef": "ServiceRequest.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "ServiceRequest.status",
            "mustHave": false
          },
          {
            "attributeRef": "ServiceRequest.intent",
            "mustHave": false
          },
          {
            "attributeRef": "ServiceRequest.category",
            "mustHave": false
          },
          {
            "attributeRef": "ServiceRequest.code",
            "mustHave": false
          },
          {
            "attributeRef": "ServiceRequest.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "ServiceRequest.authoredOn",
            "mustHave": false
          },
          {
            "attributeRef": "ServiceRequest.specimen",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      },
      {
        "groupReference": "https://www.medizininformatik-initiative.de/fhir/core/modul-labor/StructureDefinition/DiagnosticReportLab",
        "attributes": [
          {
            "attributeRef": "DiagnosticReport.identifier",
            "mustHave": false
          },
          {
            "attributeRef": "DiagnosticReport.basedOn",
            "mustHave": false
          },
          {
            "attributeRef": "DiagnosticReport.status",
            "mustHave": false
          },
          {
            "attributeRef": "DiagnosticReport.category",
            "mustHave": false
          },
          {
            "attributeRef": "DiagnosticReport.code",
            "mustHave": false
          },
          {
            "attributeRef": "DiagnosticReport.encounter",
            "mustHave": false
          },
          {
            "attributeRef": "DiagnosticReport.effective[x]",
            "mustHave": false
          },
          {
            "attributeRef": "DiagnosticReport.issued",
            "mustHave": false
          },
          {
            "attributeRef": "DiagnosticReport.performer",
            "mustHave": false
          },
          {
            "attributeRef": "DiagnosticReport.specimen",
            "mustHave": false
          },
          {
            "attributeRef": "DiagnosticReport.result",
            "mustHave": false
          },
          {
            "attributeRef": "DiagnosticReport.conclusion",
            "mustHave": false
          }
        ],
        "filter": [
          {
            "type": "date",
            "name": "date",
            "start": "2020",
            "end": "2025"
          }
        ]
      }
    ]
  }
}
"
  }
  ]
}
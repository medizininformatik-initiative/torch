services:
  # many of the settings are set to get Blaze as slow as possible
  blaze:
    image: samply/blaze:main
    environment:
      BASE_URL: http://blaze:8080
      LOG_LEVEL: debug
      ALLOW_MULTIPLE_DELETE: true
      JAVA_TOOL_OPTIONS: -Xmx1g
      DB_BLOCK_CACHE_SIZE: 0
      DB_RESOURCE_CACHE_SIZE: 0
    ports:
      - "8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 2G

  flare:
    image: ghcr.io/medizininformatik-initiative/flare:develop
    environment:
      LOG_LEVEL: debug
      FLARE_FHIR_SERVER: http://blaze:8080/fhir
      FLARE_ENABLE_COHORT_ENDPOINT: true
    ports:
      - "8080"
    depends_on:
      blaze:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/cache/stats" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  torch:
    restart: unless-stopped
    image: torch:latest
    ports:
      - "8080"
    environment:
      TORCH_PROFILE_DIR: /app/structureDefinitions
      TORCH_MAPPING_CONSENT: /app/mappings/consent-mappings_fhir.json
      TORCH_MAPPING_TYPE_TO_CONSENT: /app/mappings/type_to_consent.json
      TORCH_FHIR_URL: http://blaze:8080/fhir
      TORCH_FHIR_MAX_CONNECTIONS: 4
      TORCH_RESULTS_DIR: /app/output
      LOG_LEVEL: debug
      TORCH_OUTPUT_FILE_SERVER_URL: http://localhost:8085
      TORCH_BASE_URL: http://localhost:8080
      TORCH_BATCHSIZE: 100
      TORCH_MAXCONCURRENCY: 4
      TORCH_MAPPINGSFILE: /app/ontology/mapping_cql.json
      TORCH_CONCEPTTREEFILE: /app/ontology/mapping_tree.json
      TORCH_USECQL: true
      JAVA_TOOL_OPTIONS: -Xmx4g
    volumes:
      - torch-data-store:/app/output

  nginx:
    restart: unless-stopped
    image: nginxinc/nginx-unprivileged:1.25.5-alpine
    ports:
      - "8080"
    volumes:
      - torch-data-store:/app/output
      - ./nginx.conf.template:/etc/nginx/nginx.conf.template
      - ./start-nginx.sh:/start-nginx.sh  # Shared with torch service
    entrypoint: [ "/bin/sh", "/start-nginx.sh" ]

volumes:
  torch-data-store:
